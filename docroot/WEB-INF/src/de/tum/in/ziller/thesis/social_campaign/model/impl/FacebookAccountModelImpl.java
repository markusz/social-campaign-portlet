/**
 * Copyright (c) 2000-2010 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package de.tum.in.ziller.thesis.social_campaign.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import de.tum.in.ziller.thesis.social_campaign.model.FacebookAccount;
import de.tum.in.ziller.thesis.social_campaign.model.FacebookAccountModel;

import java.io.Serializable;

import java.lang.reflect.Proxy;

import java.sql.Types;

/**
 * The base model implementation for the FacebookAccount service. Represents a row in the &quot;zsc_FacebookAccount&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link de.tum.in.ziller.thesis.social_campaign.model.FacebookAccountModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FacebookAccountImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this class directly. All methods that expect a facebook account model instance should use the {@link de.tum.in.ziller.thesis.social_campaign.model.FacebookAccount} interface instead.
 * </p>
 *
 * @author Markus Ziller
 * @see FacebookAccountImpl
 * @see de.tum.in.ziller.thesis.social_campaign.model.FacebookAccount
 * @see de.tum.in.ziller.thesis.social_campaign.model.FacebookAccountModel
 * @generated
 */
public class FacebookAccountModelImpl extends BaseModelImpl<FacebookAccount>
	implements FacebookAccountModel {
	public static final String TABLE_NAME = "zsc_FacebookAccount";
	public static final Object[][] TABLE_COLUMNS = {
			{ "userProfileId", new Integer(Types.BIGINT) },
			{ "facebookAccountId", new Integer(Types.VARCHAR) }
		};
	public static final String TABLE_SQL_CREATE = "create table zsc_FacebookAccount (userProfileId LONG not null primary key,facebookAccountId VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table zsc_FacebookAccount";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.de.tum.in.ziller.thesis.social_campaign.model.FacebookAccount"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.de.tum.in.ziller.thesis.social_campaign.model.FacebookAccount"),
			true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.de.tum.in.ziller.thesis.social_campaign.model.FacebookAccount"));

	public FacebookAccountModelImpl() {
	}

	public long getPrimaryKey() {
		return _userProfileId;
	}

	public void setPrimaryKey(long pk) {
		setUserProfileId(pk);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_userProfileId);
	}

	public long getUserProfileId() {
		return _userProfileId;
	}

	public void setUserProfileId(long userProfileId) {
		_userProfileId = userProfileId;
	}

	public String getFacebookAccountId() {
		if (_facebookAccountId == null) {
			return StringPool.BLANK;
		}
		else {
			return _facebookAccountId;
		}
	}

	public void setFacebookAccountId(String facebookAccountId) {
		_facebookAccountId = facebookAccountId;
	}

	public FacebookAccount toEscapedModel() {
		if (isEscapedModel()) {
			return (FacebookAccount)this;
		}
		else {
			return (FacebookAccount)Proxy.newProxyInstance(FacebookAccount.class.getClassLoader(),
				new Class[] { FacebookAccount.class },
				new AutoEscapeBeanHandler(this));
		}
	}

	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(0,
					FacebookAccount.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	public Object clone() {
		FacebookAccountImpl clone = new FacebookAccountImpl();

		clone.setUserProfileId(getUserProfileId());
		clone.setFacebookAccountId(getFacebookAccountId());

		return clone;
	}

	public int compareTo(FacebookAccount facebookAccount) {
		long pk = facebookAccount.getPrimaryKey();

		if (getPrimaryKey() < pk) {
			return -1;
		}
		else if (getPrimaryKey() > pk) {
			return 1;
		}
		else {
			return 0;
		}
	}

	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		FacebookAccount facebookAccount = null;

		try {
			facebookAccount = (FacebookAccount)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long pk = facebookAccount.getPrimaryKey();

		if (getPrimaryKey() == pk) {
			return true;
		}
		else {
			return false;
		}
	}

	public int hashCode() {
		return (int)getPrimaryKey();
	}

	public String toString() {
		StringBundler sb = new StringBundler(5);

		sb.append("{userProfileId=");
		sb.append(getUserProfileId());
		sb.append(", facebookAccountId=");
		sb.append(getFacebookAccountId());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(10);

		sb.append("<model><model-name>");
		sb.append(
			"de.tum.in.ziller.thesis.social_campaign.model.FacebookAccount");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>userProfileId</column-name><column-value><![CDATA[");
		sb.append(getUserProfileId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>facebookAccountId</column-name><column-value><![CDATA[");
		sb.append(getFacebookAccountId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private long _userProfileId;
	private String _facebookAccountId;
	private transient ExpandoBridge _expandoBridge;
}